# Generated by Django 5.0.6 on 2024-08-10 11:25

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("staff", "0003_delete_customer"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("auto_id", models.IntegerField(db_index=True, unique=True)),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "company_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("company_description", models.TextField(blank=True, null=True)),
                ("terms", models.TextField(blank=True, null=True)),
                ("benefits", models.TextField(blank=True, null=True)),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Investor",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("auto_id", models.IntegerField(db_index=True, unique=True)),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "address_line1",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "address_line2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "post_office",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("dob", models.DateField(blank=True, default="", null=True)),
                (
                    "certificate_number",
                    models.CharField(
                        blank=True, default="", max_length=50, null=True, unique=True
                    ),
                ),
                ("pincode", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "share_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "bank_holder_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("bank_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "bank_branch",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "bank_account_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("bank_ifsc", models.CharField(blank=True, max_length=20, null=True)),
                ("number_of_shares", models.PositiveIntegerField(default=0)),
                (
                    "rewards",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "dividend",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "id_proof_type",
                    models.CharField(
                        blank=True,
                        choices=[("adhar", "Aadhar Card"), ("pan", "PAN Card")],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "id_proof_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "nominee_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "nominee_address_line1",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "nominee_address_line2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "nominee_postoffice",
                    models.CharField(blank=True, default="", max_length=100, null=True),
                ),
                (
                    "nominee_pincode",
                    models.CharField(blank=True, default="", max_length=20, null=True),
                ),
                (
                    "nominee_id_proof_type",
                    models.CharField(
                        blank=True,
                        choices=[("adhar", "Aadhar Card"), ("pan", "PAN Card")],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "nominee_id_proof_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "nominee_mobile",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("nominee_country_code", models.CharField(default="91", max_length=5)),
                (
                    "nominee_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "district",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="investor_districts",
                        to="staff.district",
                    ),
                ),
                (
                    "nominee_district",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="nominee_districts",
                        to="staff.district",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="investors",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Investor",
                "verbose_name_plural": "Investors",
            },
        ),
    ]
